{"version":3,"sources":["components/About.tsx","components/Career.tsx","components/CareerCard.tsx","components/Contact.tsx","components/Header.tsx","components/Home.tsx","components/Main.tsx","withRoot.tsx","App.tsx","serviceWorker.ts","index.tsx","images/my-androidify.png","images/my-profile-picture.jpg","images/kirigamine-10_TP_V.jpg"],"names":["withStyles","theme","createStyles","avatar","height","width","grid","flexGrow","maxWidth","minHeight","root","padding","toolbarSpacer","mixins","toolbar","props","classes","react","id","className","Grid","container","justify","direction","alignItems","spacing","item","Typography","variant","align","gutterBottom","Avatar","alt","src","Androidfy","MyPicture","xs","sm","color","paragraph","careers","details","headline","positions","skills","chip","marginBottom","marginRight","chipsContainer","display","flexWrap","map","career","i","key","md","components_CareerCard","_ref","Card","CardContent","join","Chip","label","detail","githubIcon","icon","fontSize","iconButton","linkedinIcon","twitterIcon","contacts","component","index_es","classNames","to","IconButton","href","target","routes","a","textDecorationLine","justifyContent","AppBar","position","Toolbar","noWrap","p","Object","assign","concat","toUpperCase","Home","backgroundContainer","backgroundColor","palette","common","black","backgroundImage","Background","backgroundPosition","backgroundRepeat","white","textAlign","backgroundFilter","Paper","Main","content","overflow","components_Home","components_About","components_Career","components_Contact","createMuiTheme","primary","teal","secondary","red","withRoot","Component","ThemeProvider","CssBaseline","RootContainer","components_Header","components_Main","styled","div","_templateObject","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.c654d525.chunk.js","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport Androidfy from '../images/my-androidify.png';\nimport MyPicture from '../images/my-profile-picture.jpg';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    avatar: {\n      height: 200,\n      width: 200,\n    },\n    grid: {\n      flexGrow: 1,\n      maxWidth: '100vw',\n      minHeight: '100vh',\n    },\n    // Required Grid component Limitations\n    // see https://material-ui.com/layout/grid/#negative-margin\n    root: {\n      padding: 16,\n    },\n    toolbarSpacer: theme.mixins.toolbar,\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\nexport default withStyles(styles)(function About(props: Props) {\n  const { classes } = props;\n  return (\n    <div id=\"about\" className={classes.root}>\n      <div className={classes.toolbarSpacer} />\n      <Grid\n        container={true}\n        justify=\"center\"\n        direction=\"column\"\n        alignItems=\"center\"\n        className={classes.grid}\n        spacing={4}\n      >\n        <Grid item={true}>\n          <Typography variant=\"h3\" align=\"center\" gutterBottom={true}>\n            About\n          </Typography>\n        </Grid>\n        <Grid item={true}>\n          <Grid\n            container={true}\n            justify=\"center\"\n            direction=\"row\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item={true}>\n              <Avatar\n                alt=\"Daiki Ihara androidfy\"\n                src={Androidfy}\n                className={classes.avatar}\n              />\n            </Grid>\n            <Grid item={true}>\n              <Avatar\n                alt=\"Daiki Ihara picture\"\n                src={MyPicture}\n                className={classes.avatar}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={true} xs={8} sm={6}>\n          <Typography\n            variant=\"body1\"\n            align=\"center\"\n            color=\"textSecondary\"\n            paragraph={true}\n          >\n            Daiki Ihara is Front-End Engineer. I love Web, Vim, Javascript,\n            Typescript, React etc. Working in Tokyo, Japan. Like web services.\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n});\n","import Grid from '@material-ui/core/Grid';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport * as React from 'react';\nimport { CareerCard } from '../components';\nimport { CareerItems } from '../types';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    chip: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2),\n    },\n    chipsContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    grid: {\n      maxWidth: '100vw',\n      minHeight: '100vh',\n    },\n    root: {\n      padding: 16,\n    },\n    toolbarSpacer: theme.mixins.toolbar,\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\nconst careers: CareerItems[] = [\n  {\n    details: [\n      \"I worked at WACUL INC. I worked for AI Analyst that's the SaaS product of WACUL.\",\n      'First, I made report from Google Analytics with Microsoft Excel, Microsoft Power Point when I worked as part time job',\n      'After while, I joined WACUL as employee and was engaged in logic development',\n      'Next, I changed the job to UX design and Project management about AI Analyst. Think about features, screen layout and design, communications with bussiness and development team etc.',\n    ],\n    headline: 'August 2014 - February 2018',\n    positions: ['Data Scientist', 'UX designer', 'Project Manager'],\n    skills: [\n      'Scala',\n      'Python',\n      'Javascript',\n      'jQuery',\n      'UI/UX',\n      'Sketch',\n      'Management',\n    ],\n  },\n  {\n    details: [\n      'I worked at M3 Career, Inc. I was involved in two project.',\n      'One is the new native mobile application for doctors. The other is the renewal project of lagacy web system about job change for doctors',\n      'In mobile app project, I used React Native and GraphQL. I mainly developed about front-end and implemented back-end server written by Kotlin and Java a little.',\n      'In renewal project, I took over one of the biggest issue from colleague. I used Vue.js and Ruby on Rails when I modernized a functionality by refactoring.',\n    ],\n    headline: 'March 2018 - February 2019',\n    positions: ['Web Application Engineer'],\n    skills: [\n      'JavaScript',\n      'Node.js',\n      'React Native',\n      'Kotlin',\n      'Java',\n      'GraphQL',\n      'Vue.js',\n      'Ruby on Rails',\n    ],\n  },\n  {\n    details: [\n      'I work at CureApp, Inc. I develop new app like medicine by React Native.',\n      'My hobby is to contribute to OSS like Node.js or React Native',\n    ],\n    headline: 'March 2019 - the present',\n    positions: ['Engineer'],\n    skills: ['Node.js', 'React Native', 'TypeScript'],\n  },\n];\n\nexport default withStyles(styles)(function Career(props: Props) {\n  const { classes } = props;\n  return (\n    <div id=\"career\" className={classes.root}>\n      <div className={classes.toolbarSpacer} />\n      <Grid\n        container={true}\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.grid}\n        spacing={4}\n      >\n        {careers.map((career, i) => (\n          <Grid item={true} key={i} xs={12} md={8}>\n            <CareerCard {...career} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n});\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport { CareerItems } from '../types';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    chip: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2),\n    },\n    chipsContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles>, CareerItems {}\n\nconst CareerCard = ({\n  headline,\n  skills,\n  positions,\n  details,\n  classes,\n}: Props) => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"h6\" gutterBottom={true}>\n        {headline}\n      </Typography>\n      <Typography variant=\"subtitle2\">Position</Typography>\n      <Typography gutterBottom={true}>{positions.join(', ')}</Typography>\n      <Typography variant=\"subtitle2\">Skills</Typography>\n      <div className={classes.chipsContainer}>\n        {skills.map((item, i) => (\n          <Chip\n            label={item}\n            key={i}\n            color=\"primary\"\n            variant=\"outlined\"\n            className={classes.chip}\n          />\n        ))}\n      </div>\n      <Typography variant=\"subtitle2\" gutterBottom={true}>\n        Details\n      </Typography>\n      {details.map((detail, i) => (\n        <Typography key={i} gutterBottom={true}>\n          {detail}\n        </Typography>\n      ))}\n    </CardContent>\n  </Card>\n);\n\nexport default withStyles(styles)(CareerCard);\n","import Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport { GithubCircle, Linkedin, Twitter } from 'mdi-material-ui';\nimport * as React from 'react';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    githubIcon: { color: '#333' },\n    grid: {\n      maxWidth: '100vw',\n      minHeight: '100vh',\n    },\n    icon: {\n      fontSize: 80,\n    },\n    iconButton: {\n      height: 120,\n      width: 120,\n    },\n    linkedinIcon: {\n      color: '#0077B5',\n    },\n    root: {\n      padding: 16,\n    },\n    toolbarSpacer: theme.mixins.toolbar,\n    twitterIcon: {\n      color: '#00aced',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\ninterface ContactItem {\n  component: JSX.Element;\n  to: string;\n}\n\nexport default withStyles(styles)(function Contact(props: Props) {\n  const { classes } = props;\n  const contacts: ContactItem[] = [\n    {\n      component: (\n        <Twitter\n          key=\"twitter-icon\"\n          className={classNames(classes.icon, classes.twitterIcon)}\n        />\n      ),\n      to: 'https://twitter.com/sasurau4',\n    },\n    {\n      component: (\n        <GithubCircle\n          key=\"github\"\n          className={classNames(classes.icon, classes.githubIcon)}\n        />\n      ),\n      to: 'https://github.com/sasurau4',\n    },\n    {\n      component: (\n        <Linkedin\n          key=\"linkedin\"\n          className={classNames(classes.icon, classes.linkedinIcon)}\n        />\n      ),\n      to: 'https://www.linkedin.com/in/daiki-ihara-8bb118106',\n    },\n  ];\n  return (\n    <div id=\"contact\" className={classes.root}>\n      <Grid\n        container={true}\n        justify=\"center\"\n        direction=\"column\"\n        alignItems=\"center\"\n        className={classes.grid}\n        spacing={4}\n      >\n        <Grid item={true}>\n          <Typography variant=\"h3\" align=\"center\" gutterBottom={true}>\n            Contact\n          </Typography>\n        </Grid>\n        <Grid item={true}>\n          <Grid\n            container={true}\n            justify=\"center\"\n            direction=\"row\"\n            alignItems=\"center\"\n            spacing={4}\n          >\n            {contacts.map((item, i) => (\n              <Grid item={true} key={i}>\n                <IconButton\n                  className={classes.iconButton}\n                  href={item.to}\n                  target=\"_blank\"\n                >\n                  {item.component}\n                </IconButton>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n});\n","import AppBar from '@material-ui/core/AppBar';\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\n\nconst styles = () =>\n  createStyles({\n    a: {\n      textDecorationLine: 'none',\n    },\n    toolbar: {\n      justifyContent: 'space-evenly',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\nconst routes: string[] = ['home', 'about', 'career', 'contact'];\n\nexport default withStyles(styles)(function Header(props: Props) {\n  const { classes } = props;\n  return (\n    <header>\n      <nav>\n        <AppBar position=\"absolute\">\n          <Toolbar className={classes.toolbar} variant=\"dense\">\n            {routes.map(item => (\n              <Typography\n                color=\"inherit\"\n                noWrap={true}\n                key={item}\n                className={classes.a}\n                component={p => <a href={`#${item}`} {...p} />}\n              >\n                {item.toUpperCase()}\n              </Typography>\n            ))}\n          </Toolbar>\n        </AppBar>\n      </nav>\n    </header>\n  );\n});\n","import Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport Background from '../images/kirigamine-10_TP_V.jpg';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    backgroundContainer: {\n      backgroundColor: theme.palette.common.black,\n      backgroundImage: `url(${Background})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      color: theme.palette.common.white,\n      height: '100vh',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n    backgroundFilter: {\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      height: '100vh',\n    },\n    grid: {\n      minHeight: '100vh',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Home = withStyles(styles)((props: Props) => (\n  <Paper id=\"home\" className={props.classes.backgroundContainer}>\n    <div className={props.classes.backgroundFilter}>\n      <Grid\n        container={true}\n        justify=\"center\"\n        direction=\"column\"\n        alignItems=\"center\"\n        className={props.classes.grid}\n      >\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"inherit\"\n          gutterBottom={true}\n        >\n          Daiki Ihara\n        </Typography>\n        <Typography variant=\"h3\" color=\"inherit\" paragraph={true}>\n          Personal biography\n        </Typography>\n      </Grid>\n    </div>\n  </Paper>\n));\n\nexport default Home;\n","import { createStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport * as React from 'react';\nimport { About, Career, Contact, Home } from '../components';\n\nconst styles = () =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Main = withStyles(styles)((props: Props) => (\n  <main className={props.classes.content}>\n    <Home />\n    <About />\n    <Career />\n    <Contact />\n  </main>\n));\n\nexport default Main;\n","import red from '@material-ui/core/colors/red';\nimport teal from '@material-ui/core/colors/teal';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport * as React from 'react';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n    secondary: red,\n  },\n});\n\nfunction withRoot(Component: React.ComponentType) {\n  function WithRoot(props: object) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </ThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Header, Main } from './components';\nimport withRoot from './withRoot';\n\nconst App: React.StatelessComponent<{}> = () => (\n  <RootContainer>\n    <Header />\n    <Main />\n  </RootContainer>\n);\n\nexport default withRoot(App);\n\nconst RootContainer = styled.div`\n  display: flex;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/my-androidify.4991b92e.png\";","module.exports = __webpack_public_path__ + \"static/media/my-profile-picture.4a5e9b19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kirigamine-10_TP_V.0b370f02.jpg\";"],"sourceRoot":""}